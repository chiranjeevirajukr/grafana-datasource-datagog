{"version":3,"sources":["../../src/datasource.js"],"names":["queryBuilder","DataDogDatasource","instanceSettings","backendSrv","templateSrv","type","url","name","api_key","jsonData","application_key","app_key","supportMetrics","_cached_metrics","invokeDataDogApiRequest","then","status","title","message","catch","error","getTagsFromCache","map","tags","hosts","tag","text","value","Promise","resolve","fetching","d","Date","setDate","getDate","from","Math","floor","getTime","params","result","metrics","metric","Object","keys","tagsHosts","kv","mapTagsToKVPairs","grafanaTags","options","grafanaValues","key","val","range","valueOf","to","targets","filter","t","hide","length","data","adhocFilters","getAdhocFilters","queries","query","target","rawQuery","buildQuery","queryString","join","replace","scopedVars","dataResponse","series","i","alias","expression","pointlist","point","timeFrom","timeTo","annotation","priority","sources","getEventStream","eventAnnotations","eventStreams","allEvents","eventStream","children","filteredEvents","event","alert_type","renderedText","isDataDogMarkdown","convertDataDogMdToHtml","console","log","time","date_happened","flatten","searchEntities","entity","q","results","getTags","_cached_tags","getTagsHosts","start","end","events","datasourceRequest","method","response","statusText","err","kv_tags","indexOf","kv_pairs","split","kv_object","forEach","pair","push","str","MD_START","MD_END","md_start_index","md_end_index","md","substring","removeImagesFromDataDogMarkdown","converter","Converter","makeHtml","dataDogImagePattern"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from 'lodash';\nimport showdown from './showdown.min.js';\nimport * as queryBuilder from './query_builder';\n\nexport class DataDogDatasource {\n\n  constructor (instanceSettings, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.api_key = instanceSettings.jsonData.api_key;\n    this.application_key = instanceSettings.jsonData.app_key;\n    this.supportMetrics = true;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this._cached_metrics = false;\n  }\n\n  // Function to check Datasource health\n  testDatasource() {\n    return this.invokeDataDogApiRequest('/downtime')\n    .then(() => {\n      return {\n        status: \"success\",\n        title: \"Success\",\n        message: \"Data source is working\"\n      };\n    })\n    .catch(error => {\n      var message = \"Connection error\";\n      if (error && error.message) {\n        message = error.message;\n      }\n\n      return {\n        status: \"error\",\n        title: \"Error\",\n        message: message\n      };\n    });\n  }\n\n  metricFindTags() {\n    return this.getTagsFromCache()\n    .then(tags => {\n      return _.map(tags, (hosts, tag) => {\n        return {\n          text: tag,\n          value: tag,\n        };\n      });\n    });\n  }\n\n  metricFindQuery() {\n    if (this._cached_metrics) {\n      return Promise.resolve(this._cached_metrics);\n    }\n\n    if (this.fetching) {\n      return this.fetching;\n    }\n\n    var d = new Date();\n    d.setDate(d.getDate() - 1);\n    var from = Math.floor(d.getTime() / 1000);\n    var params = { from: from };\n\n    this.fetching = this.invokeDataDogApiRequest('/metrics', params)\n    .then(result => {\n      this._cached_metrics = _.map(result.metrics, metric => {\n        return {\n          text: metric,\n          value: metric,\n        };\n      });\n\n      return this._cached_metrics;\n    });\n\n    return this.fetching;\n  }\n\n  getTagKeys() {\n    return this.getTagsFromCache()\n    .then(tagsHosts => {\n      let tags = Object.keys(tagsHosts);\n      let kv = mapTagsToKVPairs(tags);\n      let grafanaTags = Object.keys(kv);\n\n      return grafanaTags.map(tag => {\n        return {\n          text: tag,\n          value: tag,\n        };\n      });\n    });\n  }\n\n  getTagValues(options) {\n    return this.getTagsFromCache()\n    .then(tagsHosts => {\n      let tags = Object.keys(tagsHosts);\n      let kv = mapTagsToKVPairs(tags);\n      let grafanaValues = kv[options.key];\n      return grafanaValues.map(val => {\n        return {\n          text: val,\n          value: val,\n        };\n      });\n    });\n  }\n\n  query(options) {\n    var from = Math.floor(options.range.from.valueOf() / 1000);\n    var to = Math.floor(options.range.to.valueOf() / 1000);\n\n    var targets = options.targets.filter(function (t) { return !t.hide; });\n\n    if (targets.length <= 0) {\n      return Promise.resolve({data: []});\n    }\n\n    // add global adhoc filters\n    let adhocFilters = this.templateSrv.getAdhocFilters(this.name);\n\n    var queries = _.map(targets, target => {\n      let query;\n      if (target.rawQuery) {\n        query = target.query;\n      } else {\n        query = queryBuilder.buildQuery(target, adhocFilters);\n      }\n      return query;\n    });\n\n    var queryString = queries.join(',');\n    queryString = this.templateSrv.replace(queryString, options.scopedVars);\n\n    var params = {\n      from: from,\n      to: to,\n      query: queryString,\n    };\n\n    return this.invokeDataDogApiRequest('/query', params)\n    .then(result => {\n      var dataResponse = _.map(result.series, (series, i) => {\n        var target = targets[i];\n        return {\n          'target': target.alias || series.expression,\n          'datapoints': _.map(series.pointlist, point => {\n            return [point[1], point[0]];\n          })\n        };\n      });\n\n      return {data: dataResponse};\n    });\n  }\n\n  annotationQuery(options) {\n    let timeFrom = Math.floor(options.range.from.valueOf() / 1000);\n    let timeTo = Math.floor(options.range.to.valueOf() / 1000);\n    let {priority, sources, tags} = options.annotation;\n\n    return this.getEventStream(timeFrom, timeTo, priority, sources, tags)\n    .then(eventStreams => {\n      let eventAnnotations = eventStreams.map(eventStream => {\n        let allEvents = eventStream.children;\n        let filteredEvents = _.filter(allEvents, event => {\n          return event.alert_type !== 'success';\n        });\n\n        return _.map(filteredEvents, event => {\n          let renderedText = eventStream.text;\n          if (isDataDogMarkdown(eventStream.text)) {\n            renderedText = convertDataDogMdToHtml(eventStream.text);\n          }\n          console.log(renderedText);\n\n          return {\n            annotation: options.annotation,\n            time: event.date_happened * 1000,\n            title: eventStream.title,\n            text: renderedText,\n            tags: eventStream.tags\n          };\n        });\n      });\n\n      return _.flatten(eventAnnotations);\n    });\n  }\n\n  getHosts() {\n    return this.searchEntities('hosts');\n  }\n\n  // entity should be 'hosts' or 'metrics'\n  // http://docs.datadoghq.com/api/?lang=console#search\n  searchEntities(entity) {\n    let params = {q: ''};\n    if (entity) {\n      params.q = `${entity}:`;\n    }\n\n    return this.invokeDataDogApiRequest('/search', params)\n    .then(result => {\n      if (result && result.results) {\n        return result.results[entity];\n      }\n    });\n  }\n\n  getTagsHosts() {\n    return this.invokeDataDogApiRequest('/tags/hosts')\n    .then(result => {\n      if (result && result.tags) {\n        return result.tags;\n      }\n    });\n  }\n\n  getTagsFromCache() {\n    let getTags;\n    if (this._cached_tags && this._cached_tags.length) {\n      getTags = Promise.resolve(this._cached_tags);\n    } else {\n      getTags = this.getTagsHosts().then(tags => {\n        this._cached_tags = tags;\n        return tags;\n      });\n    }\n\n    return getTags;\n  }\n\n  getEventStream(timeFrom, timeTo, priority, sources, tags) {\n    let params = {\n      start: timeFrom,\n      end: timeTo\n    };\n    if (priority) {\n      params.priority = priority;\n    }\n    if (sources) {\n      params.sources = sources;\n    }\n    if (tags) {\n      params.tags = tags;\n    }\n\n    return this.invokeDataDogApiRequest('/events', params)\n    .then(result => {\n      if (result.events) {\n        return result.events;\n      } else {\n        return [];\n      }\n    });\n  }\n\n  invokeDataDogApiRequest(url, params = {}) {\n    // Set auth params\n    params.api_key = this.api_key;\n    params.application_key = this.application_key;\n\n    return this.backendSrv.datasourceRequest({\n      method: 'GET',\n      url: this.url + url,\n      params: params\n    })\n    .then(response => {\n      if (response.data) {\n        return response.data;\n      } else {\n        throw {message: 'DataDog API request error'};\n      }\n    })\n    .catch(error => {\n      var message = 'DataDog API request error';\n      if (error.statusText) {\n        message = error.status + ' ' + error.statusText;\n        throw {message: message};\n      } else if (error.err.statusText) {\n        throw {message: error.err.statusText};\n      } else {\n        throw {message: message};\n      }\n    });\n  }\n}\n\n/*\n * Convert tags to key-value pairs\n * [region:east, region:nw] => {region: [east, nw]}\n */\nfunction mapTagsToKVPairs(tags) {\n  let kv_tags = _.filter(tags, tag => {\n    return (tag.indexOf(':') !== -1);\n  });\n\n  let kv_pairs = kv_tags.map(tag => {\n    return tag.split(':', 2); // Limit to 2\n  });\n\n  let kv_object = {};\n  kv_pairs.forEach(pair => {\n    let key = pair[0];\n    let val = pair[1];\n\n    if (kv_object[key]) {\n      kv_object[key].push(val);\n    } else {\n      kv_object[key] = [val];\n    }\n  });\n\n  return kv_object;\n}\n\n/*\n * Convert DataDog event text from markdown to pure HTML\n * http://docs.datadoghq.com/guides/markdown/\n */\nfunction convertDataDogMdToHtml(str) {\n  const MD_START = '%%%\\n';\n  const MD_END = '\\n%%%';\n\n  console.log(str);\n  let md_start_index = str.indexOf(MD_START) + MD_START.length;\n  let md_end_index = str.indexOf(MD_END);\n  let md = str.substring(md_start_index, md_end_index);\n  md = removeImagesFromDataDogMarkdown(md);\n\n  let converter = new showdown.Converter();\n  return converter.makeHtml(md);\n}\n\nfunction isDataDogMarkdown(str) {\n  const MD_START = '%%%\\n';\n  return str.indexOf(MD_START) >= 0;\n}\n\nfunction removeImagesFromDataDogMarkdown(str) {\n  let dataDogImagePattern = /\\[{0,1}\\!\\[.*\\]\\(https{0,1}\\:\\/\\/p\\.datadoghq\\.com\\/snapshot.+\\)/g;\n  return str.replace(dataDogImagePattern, '');\n}\n"]}