{"version":3,"sources":["../src/datasource.js"],"names":["mapTagsToKVPairs","tags","kv_tags","_","filter","tag","indexOf","kv_pairs","map","split","kv_object","forEach","key","pair","val","push","queryBuilder","DataDogDatasource","instanceSettings","backendSrv","templateSrv","type","url","name","api_key","jsonData","application_key","app_key","supportMetrics","_cached_metrics","invokeDataDogApiRequest","then","status","title","message","catch","error","_cached_tags","length","Promise","resolve","fetching_tags","searchEntities","console","log","entitis","getTagsHosts","hosts","text","value","fetching","d","Date","setDate","getDate","from","Math","floor","getTime","params","result","metrics","metric","options","Object","keys","tagsHosts","kv","grafanaTags","grafanaValues","range","valueOf","to","targets","t","hide","data","adhocFilters","getAdhocFilters","queries","query","buildQuery","target","queryString","join","replace","scopedVars","dataResponse","series","i","alias","expression","pointlist","point","timeFrom","timeTo","annotation","priority","sources","getEventStream","eventAnnotations","eventStreams","allEvents","eventStream","children","filteredEvents","event","alert_type","time","date_happened","flatten","entity","q","results","start","end","events","datasourceRequest","method","response","statusText","err"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from 'lodash';\nimport * as queryBuilder from './query_builder';\n\nexport class DataDogDatasource {\n\n  constructor (instanceSettings, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.api_key = instanceSettings.jsonData.api_key;\n    this.application_key = instanceSettings.jsonData.app_key;\n    this.supportMetrics = true;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this._cached_metrics = false;\n  }\n\n  // Function to check Datasource health\n  testDatasource() {\n    return this.invokeDataDogApiRequest('/downtime')\n    .then(() => {\n      return {\n        status: \"success\",\n        title: \"Success\",\n        message: \"Data source is working\"\n      };\n    })\n    .catch(error => {\n      var message = \"Connection error\";\n      if (error && error.message) {\n        message = error.message;\n      }\n\n      return {\n        status: \"error\",\n        title: \"Error\",\n        message: message\n      };\n    });\n  }\n\n  metricFindTags() {\n    if (this._cached_tags && this._cached_tags.length) {\n      return Promise.resolve(this._cached_tags);\n    }\n\n    if (this.fetching_tags) {\n      return this.fetching_tags;\n    }\n\n    this.searchEntities('hosts').then(entitis => {\n      console.log(entitis);\n    });\n\n    this.fetching_tags = this.getTagsHosts()\n    .then(tags => {\n      this._cached_tags = _.map(tags, (hosts, tag) => {\n        return {\n          text: tag,\n          value: tag,\n        };\n      });\n\n      return this._cached_tags;\n    });\n\n    return this.fetching_tags;\n  }\n\n  metricFindQuery() {\n    if (this._cached_metrics) {\n      return Promise.resolve(this._cached_metrics);\n    }\n\n    if (this.fetching) {\n      return this.fetching;\n    }\n\n    var d = new Date();\n    d.setDate(d.getDate() - 1);\n    var from = Math.floor(d.getTime() / 1000);\n    var params = { from: from };\n\n    this.fetching = this.invokeDataDogApiRequest('/metrics', params)\n    .then(result => {\n      this._cached_metrics = _.map(result.metrics, metric => {\n        return {\n          text: metric,\n          value: metric,\n        };\n      });\n\n      return this._cached_metrics;\n    });\n\n    return this.fetching;\n  }\n\n  getTagKeys(options) {\n    return this.getTagsHosts().then(tagsHosts => {\n      let tags = Object.keys(tagsHosts);\n      let kv = mapTagsToKVPairs(tags);\n      let grafanaTags = Object.keys(kv);\n      return grafanaTags.map(tag => {\n        return {\n          text: tag,\n          value: tag,\n        };\n      });\n    });\n  }\n\n  getTagValues(options) {\n    return this.getTagsHosts().then(tagsHosts => {\n      let tags = Object.keys(tagsHosts);\n      let kv = mapTagsToKVPairs(tags);\n      let grafanaValues = kv[options.key];\n      return grafanaValues.map(val => {\n        return {\n          text: val,\n          value: val,\n        };\n      });\n    });\n  }\n\n  query(options) {\n    var from = Math.floor(options.range.from.valueOf() / 1000);\n    var to = Math.floor(options.range.to.valueOf() / 1000);\n\n    var targets = options.targets.filter(function (t) { return !t.hide; });\n\n    if (targets.length <= 0) {\n      return Promise.resolve({data: []});\n    }\n\n    // add global adhoc filters\n    let adhocFilters = this.templateSrv.getAdhocFilters(this.name);\n\n    var queries = _.map(options.targets, target => {\n      let query = queryBuilder.buildQuery(target, adhocFilters);\n      return query;\n    });\n\n    var queryString = queries.join(',');\n    queryString = this.templateSrv.replace(queryString, options.scopedVars);\n\n    var params = {\n      from: from,\n      to: to,\n      query: queryString,\n    };\n\n    return this.invokeDataDogApiRequest('/query', params)\n    .then(result => {\n      var dataResponse = _.map(result.series, (series, i) => {\n        var target = targets[i];\n        return {\n          'target': target.alias || series.expression,\n          'datapoints': _.map(series.pointlist, point => {\n            return [point[1], point[0]];\n          })\n        };\n      });\n\n      return {data: dataResponse};\n    });\n  }\n\n  annotationQuery(options) {\n    let timeFrom = Math.floor(options.range.from.valueOf() / 1000);\n    let timeTo = Math.floor(options.range.to.valueOf() / 1000);\n    let {priority, sources, tags} = options.annotation;\n\n    return this.getEventStream(timeFrom, timeTo, priority, sources, tags)\n    .then(eventStreams => {\n      let eventAnnotations = eventStreams.map(eventStream => {\n        let allEvents = eventStream.children;\n        let filteredEvents = _.filter(allEvents, event => {\n          return event.alert_type !== 'success';\n        });\n\n        return _.map(filteredEvents, event => {\n          return {\n            annotation: options.annotation,\n            time: event.date_happened * 1000,\n            title: eventStream.title,\n            text: eventStream.text,\n            tags: eventStream.tags\n          };\n        });\n      });\n\n      return _.flatten(eventAnnotations);\n    });\n  }\n\n  getHosts() {\n    return this.searchEntities('hosts');\n  }\n\n  // entity should be 'hosts' or 'metrics'\n  // http://docs.datadoghq.com/api/?lang=console#search\n  searchEntities(entity) {\n    let params = {q: ''};\n    if (entity) {\n      params.q = `${entity}:`;\n    }\n\n    return this.invokeDataDogApiRequest('/search', params)\n    .then(result => {\n      if (result && result.results) {\n        return result.results[entity];\n      }\n    });\n  }\n\n  getTagsHosts() {\n    return this.invokeDataDogApiRequest('/tags/hosts')\n    .then(result => {\n      if (result && result.tags) {\n        return result.tags;\n      }\n    });\n  }\n\n  getEventStream(timeFrom, timeTo, priority, sources, tags) {\n    let params = {\n      start: timeFrom,\n      end: timeTo\n    };\n    if (priority) {\n      params.priority = priority;\n    }\n    if (sources) {\n      params.sources = sources;\n    }\n    if (tags) {\n      params.tags = tags;\n    }\n\n    return this.invokeDataDogApiRequest('/events', params)\n    .then(result => {\n      if (result.events) {\n        return result.events;\n      } else {\n        return [];\n      }\n    });\n  }\n\n  invokeDataDogApiRequest(url, params = {}) {\n    // Set auth params\n    params.api_key = this.api_key;\n    params.application_key = this.application_key;\n\n    return this.backendSrv.datasourceRequest({\n      method: 'GET',\n      url: this.url + url,\n      params: params\n    })\n    .then(response => {\n      if (response.data) {\n        return response.data;\n      } else {\n        throw {message: 'DataDog API request error'};\n      }\n    })\n    .catch(error => {\n      var message = 'DataDog API request error';\n      if (error.statusText) {\n        message = error.status + ' ' + error.statusText;\n        throw {message: message};\n      } else if (error.err.statusText) {\n        throw {message: error.err.statusText};\n      } else {\n        throw {message: message};\n      }\n    });\n  }\n}\n\n/*\n * Convert tags to key-value pairs\n * [region:east, region:nw] => {region: [east, nw]}\n */\nfunction mapTagsToKVPairs(tags) {\n  let kv_tags = _.filter(tags, tag => {\n    return (tag.indexOf(':') !== -1);\n  });\n\n  let kv_pairs = kv_tags.map(tag => {\n    return tag.split(':', 2); // Limit to 2\n  });\n\n  let kv_object = {};\n  kv_pairs.forEach(pair => {\n    let key = pair[0];\n    let val = pair[1];\n\n    if (kv_object[key]) {\n      kv_object[key].push(val);\n    } else {\n      kv_object[key] = [val];\n    }\n  });\n\n  return kv_object;\n}\n"]}